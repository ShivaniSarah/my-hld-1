sql  database is read intensive and transaction oriented : OLTP

datawarehouse / OLAP
no sql database is write intensive

columnar  - cassandra, snowfalke, bigQuery, Redshift
key value - redis , dynamo DB
coordinate wise -  PostGIS 
documnet db -  mongo db
graph db - neo4js
hybrid - combo of sql and nosql - clickhouse


adv:

insertions/ retrievals
schema is easily changebale
built for scale
built for analysis/ aggregation

disadv:

not built for updates
read times are slower like filter
relations are not implicit
joins are hard



cassandra:  

Cyclic clockwise hashing is done and next node has the replica of previous one.
hash function has to be good like may be round robin fashion
multi level hashing or multi level sharding 

2 features:

load balancing => writes are balanced over different nodes
Replication => reads are not failing in case of fault/ failure

Replication factor

Distributed Consensus : paxos , gossip protocol
Qorum : 2
Qorum / replication factor whatever says
if multiple records for same key, use timestamp to send latest data
SST => Sorted String Table => immutable
Compaction of multiple SSTs => to prevent large memorage usage on updation , have duplicate keys
use tombstone => dead record => dont updatethe record
Tim sort -> fastest sorting algorithm

(Read about cassandra on datastax)

Read LSM tree

Elastic Search
DynamoDB

